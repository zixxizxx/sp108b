@ Generated by gcc 2.95.3 20010315 (release)(ColdFire patches - 20010318 from http://fiddes.net/coldfire/)(-msep-data patches) for ARM/elf
	.file	"StackFunc.c"
.gcc2_compiled.:
	.section .rodata
	.align	2
.LC0:
	.ascii	"%s:%u: failed assertion `%s'\012\000"
	.align	2
.LC1:
	.ascii	"StackFunc.c\000"
	.align	2
.LC2:
	.ascii	"top < STACK_SIZE\000"
.text
	.align	2
	.global	push
	.type	 push,function
push:
	@ args = 0, pretend = 0, frame = 4
	@ frame_needed = 1, current_function_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	sub	sp, sp, #4
	str	r0, [fp, #-16]
	ldr	r3, .L5
	ldr	r2, [r3, #0]
	cmp	r2, #99
	ble	.L4
	ldr	r0, .L5+4
	ldr	r1, .L5+8
	mov	r2, #5
	ldr	r3, .L5+12
	bl	__eprintf
	b	.L4
.L6:
	.align	2
.L5:
	.word	top
	.word	.LC0
	.word	.LC1
	.word	.LC2
.L3:
.L4:
	ldr	r1, .L8
	ldr	r3, .L8+4
	ldr	r2, [r3, #0]
	mov	ip, r2
	mov	lr, ip, asl #2
	ldr	ip, [fp, #-16]
	str	ip, [r1, lr]
	add	r2, r2, #1
	str	r2, [r3, #0]
	b	.L7
.L9:
	.align	2
.L8:
	.word	stack
	.word	top
.L7:
.L2:
	ldmea	fp, {fp, sp, pc}
.Lfe1:
	.size	 push,.Lfe1-push
	.section .rodata
	.align	2
.LC3:
	.ascii	"top > 0\000"
.text
	.align	2
	.global	pop
	.type	 pop,function
pop:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, current_function_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	ldr	r3, .L13
	ldr	r2, [r3, #0]
	cmp	r2, #0
	bgt	.L12
	ldr	r0, .L13+4
	ldr	r1, .L13+8
	mov	r2, #10
	ldr	r3, .L13+12
	bl	__eprintf
	b	.L12
.L11:
.L12:
	ldr	r3, .L13+16
	ldr	r1, .L13
	ldr	r2, .L13
	ldr	r1, .L13
	ldr	ip, [r1, #0]
	sub	r1, ip, #1
	mov	ip, r1
	str	ip, [r2, #0]
	mov	r2, ip
	mov	r1, r2, asl #2
	ldr	r3, [r3, r1]
	mov	r0, r3
	b	.L10
.L14:
	.align	2
.L13:
	.word	top
	.word	.LC0
	.word	.LC1
	.word	.LC3
	.word	stack
.L10:
	ldmea	fp, {fp, sp, pc}
.Lfe2:
	.size	 pop,.Lfe2-pop
